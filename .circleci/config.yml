version: 2
jobs:
  build:
    working_directory: /go/src/k8s.io/helm
    parallelism: 4
    docker:
      - image: golang:1.8
    environment:
      PROJECT_NAME: "kubernetes-helm"
      DOCKER_VERSION: "17.03.0-ce"
    steps:
      - setup_remote_docker
      - run:
          name: Install Docker client
          command: |
            set -x
            curl -sSL -o "/tmp/docker-${DOCKER_VERSION}.tgz" "https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz"
            tar -xz -C /tmp -f "/tmp/docker-${DOCKER_VERSION}.tgz"
            mv /tmp/docker/* /usr/bin
      - run:
          name: Install socat
          command: apt-get update && apt-get install -y socat
      - run:
          name: update PATH
          command: echo 'export PATH=~/.kubeadm-dind-cluster:$PATH' >> $BASH_ENV
      - checkout
      - run:
          name: install dependencies
          command: make bootstrap
      - run:
          name: go env
          command: go env
      - save_cache:
          key: vendor-{{ checksum "glide.yaml" }}-{{ checksum "glide.lock" }}
          paths:
            - vendor
      - run:
          name: test
          command: ./scripts/ci.sh
  deployment:
    working_directory: /go/src/k8s.io/helm
    docker:
      - image: golang:1.8
    environment:
      PROJECT_NAME: "kubernetes-helm"
    filters:
      tags:
        only: /.*/
      branches:
        only: master
    steps:
      - checkout
      - restore_cache:
          keys:
            - vendor-{{ checksum "glide.yaml" }}-{{ checksum "glide.lock" }}
      - run:
          name: go env
          command: go env
      - deploy:
        name: deploy
        command: ./scripts/ci/deploy.sh
