/*
Copyright The Helm Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/action/action.go
// Command used to generate: mockgen -package action -source pkg/action/action.go -destination internal/test/action/mock_action.go /action/action.go

// Package action is a generated GoMock package.
package action

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	meta "k8s.io/apimachinery/pkg/api/meta"
	discovery "k8s.io/client-go/discovery"
	rest "k8s.io/client-go/rest"
)

// MockRESTClientGetter is a mock of RESTClientGetter interface
type MockRESTClientGetter struct {
	ctrl     *gomock.Controller
	recorder *MockRESTClientGetterMockRecorder
}

// MockRESTClientGetterMockRecorder is the mock recorder for MockRESTClientGetter
type MockRESTClientGetterMockRecorder struct {
	mock *MockRESTClientGetter
}

// NewMockRESTClientGetter creates a new mock instance
func NewMockRESTClientGetter(ctrl *gomock.Controller) *MockRESTClientGetter {
	mock := &MockRESTClientGetter{ctrl: ctrl}
	mock.recorder = &MockRESTClientGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRESTClientGetter) EXPECT() *MockRESTClientGetterMockRecorder {
	return m.recorder
}

// ToRESTConfig mocks base method
func (m *MockRESTClientGetter) ToRESTConfig() (*rest.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToRESTConfig")
	ret0, _ := ret[0].(*rest.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ToRESTConfig indicates an expected call of ToRESTConfig
func (mr *MockRESTClientGetterMockRecorder) ToRESTConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToRESTConfig", reflect.TypeOf((*MockRESTClientGetter)(nil).ToRESTConfig))
}

// ToDiscoveryClient mocks base method
func (m *MockRESTClientGetter) ToDiscoveryClient() (discovery.CachedDiscoveryInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToDiscoveryClient")
	ret0, _ := ret[0].(discovery.CachedDiscoveryInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ToDiscoveryClient indicates an expected call of ToDiscoveryClient
func (mr *MockRESTClientGetterMockRecorder) ToDiscoveryClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToDiscoveryClient", reflect.TypeOf((*MockRESTClientGetter)(nil).ToDiscoveryClient))
}

// ToRESTMapper mocks base method
func (m *MockRESTClientGetter) ToRESTMapper() (meta.RESTMapper, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToRESTMapper")
	ret0, _ := ret[0].(meta.RESTMapper)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ToRESTMapper indicates an expected call of ToRESTMapper
func (mr *MockRESTClientGetterMockRecorder) ToRESTMapper() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToRESTMapper", reflect.TypeOf((*MockRESTClientGetter)(nil).ToRESTMapper))
}
